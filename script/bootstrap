#!/usr/bin/env ruby

require 'fileutils'

def root
  @root ||= File.expand_path('../../', __FILE__)
end

def check(key)
  FileUtils.mkdir('tmp') unless File.exists?('tmp')
  cache_file = "tmp/.#{key}"

  if File.exists?(cache_file)
    old_version = File.read(cache_file)
  else
    old_version = nil
  end

  version = yield(old_version)
  File.open(cache_file, 'w') { |f| f.puts(version || 'cached') }
end

def install_bundler
  check(:bundler) do |old_version|
    break if old_version

    unless system('which bundle > /dev/null')
      puts 'Bundler missing, installing...'
      system('gem install bundler --no-ri --no-rdoc') || exit(1)
    end
  end
end

def install_gems
  check(:gemfile) do |old_version|
    # check both Gemfile and Gemfile.lock as there might be local changes that hasn't been bundled yet
    version = File.read('Gemfile') + File.read('Gemfile.lock')

    if version != old_version
      puts 'Gemfile changed, bundling...'
      system('bundle install --path vendor/bundle --binstubs') || exit(1)
    end

    version
  end
end

install_bundler
install_gems

puts 'Everything is up to date.'